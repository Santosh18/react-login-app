[{"/var/www/html/react-login/react-login-app/my-login-app/src/index.js":"1","/var/www/html/react-login/react-login-app/my-login-app/src/App.js":"2","/var/www/html/react-login/react-login-app/my-login-app/src/reportWebVitals.js":"3","/var/www/html/react-login/react-login-app/my-login-app/src/Utils/PrivateRoute.js":"4","/var/www/html/react-login/react-login-app/my-login-app/src/Utils/PublicRoute.js":"5","/var/www/html/react-login/react-login-app/my-login-app/src/Utils/Common.js":"6","/var/www/html/react-login/react-login-app/my-login-app/src/Login.js":"7","/var/www/html/react-login/react-login-app/my-login-app/src/Home.js":"8","/var/www/html/react-login/react-login-app/my-login-app/src/Author.js":"9"},{"size":561,"mtime":1608039587512,"results":"10","hashOfConfig":"11"},{"size":1674,"mtime":1608042005297,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1608038025888,"results":"13","hashOfConfig":"11"},{"size":427,"mtime":1608039771918,"results":"14","hashOfConfig":"11"},{"size":393,"mtime":1608041290396,"results":"15","hashOfConfig":"11"},{"size":743,"mtime":1608039701707,"results":"16","hashOfConfig":"11"},{"size":2697,"mtime":1608044261492,"results":"17","hashOfConfig":"11"},{"size":140,"mtime":1608039361000,"results":"18","hashOfConfig":"11"},{"size":450,"mtime":1608041260702,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ekis47",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/html/react-login/react-login-app/my-login-app/src/index.js",[],["40","41"],"/var/www/html/react-login/react-login-app/my-login-app/src/App.js",[],"/var/www/html/react-login/react-login-app/my-login-app/src/reportWebVitals.js",[],"/var/www/html/react-login/react-login-app/my-login-app/src/Utils/PrivateRoute.js",[],"/var/www/html/react-login/react-login-app/my-login-app/src/Utils/PublicRoute.js",[],"/var/www/html/react-login/react-login-app/my-login-app/src/Utils/Common.js",[],"/var/www/html/react-login/react-login-app/my-login-app/src/Login.js",["42","43"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { setUserSession } from './Utils/Common';\nfunction Login(props) {\n  const [loading, setLoading] = useState(false);\n  const username = useFormInput('');\n  const password = useFormInput('');\n  const [error, setError] = useState(null);\n  const apiURL = 'api_url';\n \n  // handle button click of login form\n  const handleLogin = () => {\n    setError(null);\n    setLoading(true);\n    if(username.value === '') {\n        setError('Please entre email');\n        setLoading(false);\n        return;\n    }\n    const regexPassword = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^\\w\\s]).{8,}$/;\n    const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    if (emailRegex.test(username.value))\n    {\n        setError(null);\n        setLoading(true);\n    } else {\n        setError('Please enter valid email');\n        setLoading(false);\n        return;\n    }\n\n    if(password.value == '') {\n        setError('Please enter a password');\n        setLoading(false);\n        return;\n    }\n    \n    if (regexPassword.test(password.value)) {\n        console.log(\"hi....\");\n\n        setError(`Please enter a valid password, it contains atleast one digit, \n                one small Eng word, \n                one eng Caps word, \n                and one special char\n                and min 6 length`);\n        setLoading(false);\n        return;\n    }\n    return false;\n\n    axios.post(`${apiURL}/login`, { username: username.value, password: password.value }).then(response => {\n      setLoading(false);\n      setUserSession(response.data.token, response.data.user);\n      props.history.push('/author');\n    }).catch(error => {\n      setLoading(false);\n      if (error.response.status === 401) setError(error.response.data.message);\n      else setError(\"Something went wrong. Please try again later.\");\n    });\n  }\n \n  return (\n    <div>\n      Login<br /><br />\n      <div>\n        Username<br />\n        <input type=\"email\" required {...username} autoComplete=\"new-password\" />\n      </div>\n      <div style={{ marginTop: 10 }}>\n        Password<br />\n        <input type=\"password\" required {...password} autoComplete=\"new-password\" />\n      </div>\n      {error && <><small style={{ color: 'red' }}>{error}</small><br /></>}<br />\n      <input type=\"button\" value={loading ? 'Loading...' : 'Login'} onClick={handleLogin} disabled={loading} /><br />\n    </div>\n  );\n}\n \nconst useFormInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n \n  const handleChange = e => {\n    setValue(e.target.value);\n  }\n  return {\n    value,\n    onChange: handleChange\n  }\n}\n \nexport default Login;","/var/www/html/react-login/react-login-app/my-login-app/src/Home.js",[],"/var/www/html/react-login/react-login-app/my-login-app/src/Author.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":32,"column":23,"nodeType":"50","messageId":"51","endLine":32,"endColumn":25},{"ruleId":"52","severity":1,"message":"53","line":51,"column":5,"nodeType":"54","messageId":"55","endLine":59,"endColumn":8},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-global-assign","no-unsafe-negation"]